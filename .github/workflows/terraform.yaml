name: "Terraform Multi-Stage Deployment"

on:
  push:
    branches:
      - main  # Automatically runs `init` and `plan` on push to the main branch
  workflow_dispatch:  # Manual trigger for `apply` and `destroy`

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Clear .terraform Directory (if needed)
        run: rm -rf .terraform

      - name: Terraform Init
        run: terraform init -input=false -upgrade

  plan:
    runs-on: ubuntu-latest
    needs: init  # Dependent on the `init` job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Clear .terraform Directory (if needed)
        run: rm -rf .terraform

      - name: Terraform Init
        run: terraform init -input=false -upgrade

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform plan -out=tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan  # Dependent on the `plan` job
    if: github.event_name == 'workflow_dispatch'  # Only runs on manual trigger
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Clear .terraform Directory (if needed)
        run: rm -rf .terraform

      - name: Terraform Init
        run: terraform init -input=false -upgrade

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve tfplan

  destroy:
    runs-on: ubuntu-latest
    needs: plan  # Dependent on the `plan` job
    if: github.event_name == 'workflow_dispatch'  # Only runs on manual trigger
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Clear .terraform Directory (if needed)
        run: rm -rf .terraform

      - name: Terraform Init
        run: terraform init -input=false -upgrade

      - name: Terraform Destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve
